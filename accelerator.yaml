accelerator:
  displayName: Convention Server Template
  description: Tanzu Application Platform Accelerator to create your own Convention Server for a Supply Chain
  iconUrl: https://raw.githubusercontent.com/x95castle1/convention-server-accelerator/main/convention.jpeg
  tags:
    - golang    
    - convention
    - supplychain
  options:
    - name: projectName
      label: "Name"
      display: true
      defaultValue: example-server
      required: true
      validationRegex: "^[a-zA-Z][a-zA-Z0-9-]{0,20}$"
      description: "Name needs to start with a letter and be less than 22 characters in length"
    - name: packageName
      label: "Package Name"
      display: true
      defaultValue: convention-server.tap.example.com
      required: true
      description: "Name the Carvel package will be given, this is used when installing a package"
    - name: conventionPrefix
      label: "Convention Prefix"
      display: true
      defaultValue: example.com
      required: true
      description: "Annotation prefix to be used in a workload to pass data to your convention server"
    - name: packageLongDescription
      label: "Package Long Description"
      description: "Longer description used to describe the package, read when viewing installed packages on a cluster"
      display: true
      defaultValue: Set of conventions that enriches the pod spec with awesome things
      required: true
    - name: packageShortDescription
      label: "Package Short Description"
      description: "Brief description of the convention server"
      display: true
      defaultValue: Conventions to enrich pod spec
      required: true
    - name: packageMaintainer
      label: "Package Maintainers"
      description: "Contacts for this convention server"
      display: true
      defaultValue: conventions@example.com
      required: true
    - name: conventionImageRegistry
      label: "Convention Server Image Registry Path"
      description: "Full registry url where this convention server will be released"
      display: true
      defaultValue: harbor.example.com/tap/conventions/example-server
      required: true
    - name: stagingPackageImageRegistry
      label: "Staging Package Image Registry Path"
      description: "Full registry url where the package for the convention will be staged before release"
      display: true
      defaultValue: harbor.example-staging.com/tap/conventions/example-server-repo-bundle
      required: true
    - name: releasePackageImageRegistry
      label: "Release Package Image Registry Path"
      description: "Full registry url where this package for the convention server will be released to the WORLD!"
      display: true
      defaultValue: harbor.example.com/tap/conventions/example-server-repo-bundle
      required: true
engine:
  merge:   
    - include: ["**/*.go",
                "**/go.mod",
                "**/go.sum",
                "pkg/**/*.json",
                "README.md",
                "Makefile",
                "install-server/**",
                "carvel/**",
                "examples/**",
                ".gitignore"
    ]
      chain:
        - type: ReplaceText
          substitutions:
            - text: multi-purpose-convention-server
              with: "#artifactId.toLowerCase()" 
        - type: ReplaceText
          substitutions:
            - text: multi-purpose-convention
              with: "#artifactId.toLowerCase()"
        - type: ReplaceText
          substitutions:
            - text: CONVENTION_IMAGE_REGISTRY_PLACEHOLDER_URL
              with: "#conventionImageRegistry"
        - type: ReplaceText
          substitutions:
            - text: STAGING_PACKAGE_IMAGE_REGISTRY_PLACEHOLDER_URL
              with: "#stagingPackageImageRegistry"
        - type: ReplaceText
          substitutions:
            - text: RELEASE_PACKAGE_IMAGE_REGISTRY_PLACEHOLDER_URL
              with: "#releasePackageImageRegistry"
        - type: ReplaceText
          substitutions:
            - text: PACKAGE_NAME_PLACEHOLDER
              with: "#packageName.toLowerCase()"
        - type: ReplaceText
          substitutions:
            - text: PACKAGE_SHORT_NAME_PLACEHOLDER
              with: "#packageName.substring(0, #packageName.indexOf('.'))"
        - type: ReplaceText
          substitutions:
            - text: PACKAGE_SHORT_NAME_PLACEHOLDER
              with: "#packageName.substring(0, #packageName.indexOf('.'))"
        - type: ReplaceText
          substitutions:
            - text: PACKAGE_SUFFIX_PLACEHOLDER
              with: "#packageName.substring(#packageName.indexOf('.') + 1)"
        - type: ReplaceText
          substitutions:
            - text: PACKAGE_LONG_DESCRIPTION_PLACEHOLDER
              with: "#packageLongDescription"
        - type: ReplaceText
          substitutions:
            - text: PACKAGE_SHORT_DESCRIPTION_PLACEHOLDER
              with: "#packageShortDescription"
        - type: ReplaceText
          substitutions:
            - text: PACKAGE_MAINTAINERS_PLACEHOLDER
              with: "#packageMaintainer"
        - type: ReplaceText
          substitutions:
            - text: CONVENTION_PREFIX_PLACEHOLDER
              with: "#conventionPrefix"
        - type: ReplaceText
          substitutions:
            - text: STAGING_REGISTRY_HOST
              with: "#stagingPackageImageRegistry.substring(0, #stagingPackageImageRegistry.indexOf('/'))"
        - type: ReplaceText
          substitutions:
            - text: RELEASE_REGISTRY_HOST
              with: "#releasePackageImageRegistry.substring(0, #releasePackageImageRegistry.indexOf('/'))"
        - type: ReplaceText
          substitutions:
            - text: CONVENTION_IMAGE_REGISTRY_HOST
              with: "#conventionImageRegistry.substring(0, #conventionImageRegistry.indexOf('/'))"


              